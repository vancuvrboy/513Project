; SMT-LIBv2 configurations
(set-logic QF_NRA)
(set-option :produce-models true)
(set-option :produce-unsat-cores true)

; SMT-LIBv2 file generated for cvc5 with multi-layer configuration
; ReLU activation is disabled in hidden layers
; Number of features (input neurons): 39
; Number of layers: 1
; Number of nodes in layer 1: 4
; Number of samples: 10

(declare-fun w1_1_1 () Real)
(declare-fun w1_1_2 () Real)
(declare-fun w1_1_3 () Real)
(declare-fun w1_1_4 () Real)
(declare-fun w1_1_5 () Real)
(declare-fun w1_1_6 () Real)
(declare-fun w1_1_7 () Real)
(declare-fun w1_1_8 () Real)
(declare-fun w1_1_9 () Real)
(declare-fun w1_1_10 () Real)
(declare-fun w1_1_11 () Real)
(declare-fun w1_1_12 () Real)
(declare-fun w1_1_13 () Real)
(declare-fun w1_1_14 () Real)
(declare-fun w1_1_15 () Real)
(declare-fun w1_1_16 () Real)
(declare-fun w1_1_17 () Real)
(declare-fun w1_1_18 () Real)
(declare-fun w1_1_19 () Real)
(declare-fun w1_1_20 () Real)
(declare-fun w1_1_21 () Real)
(declare-fun w1_1_22 () Real)
(declare-fun w1_1_23 () Real)
(declare-fun w1_1_24 () Real)
(declare-fun w1_1_25 () Real)
(declare-fun w1_1_26 () Real)
(declare-fun w1_1_27 () Real)
(declare-fun w1_1_28 () Real)
(declare-fun w1_1_29 () Real)
(declare-fun w1_1_30 () Real)
(declare-fun w1_1_31 () Real)
(declare-fun w1_1_32 () Real)
(declare-fun w1_1_33 () Real)
(declare-fun w1_1_34 () Real)
(declare-fun w1_1_35 () Real)
(declare-fun w1_1_36 () Real)
(declare-fun w1_1_37 () Real)
(declare-fun w1_1_38 () Real)
(declare-fun w1_1_39 () Real)
(declare-fun b1_1 () Real)
(declare-fun w1_2_1 () Real)
(declare-fun w1_2_2 () Real)
(declare-fun w1_2_3 () Real)
(declare-fun w1_2_4 () Real)
(declare-fun w1_2_5 () Real)
(declare-fun w1_2_6 () Real)
(declare-fun w1_2_7 () Real)
(declare-fun w1_2_8 () Real)
(declare-fun w1_2_9 () Real)
(declare-fun w1_2_10 () Real)
(declare-fun w1_2_11 () Real)
(declare-fun w1_2_12 () Real)
(declare-fun w1_2_13 () Real)
(declare-fun w1_2_14 () Real)
(declare-fun w1_2_15 () Real)
(declare-fun w1_2_16 () Real)
(declare-fun w1_2_17 () Real)
(declare-fun w1_2_18 () Real)
(declare-fun w1_2_19 () Real)
(declare-fun w1_2_20 () Real)
(declare-fun w1_2_21 () Real)
(declare-fun w1_2_22 () Real)
(declare-fun w1_2_23 () Real)
(declare-fun w1_2_24 () Real)
(declare-fun w1_2_25 () Real)
(declare-fun w1_2_26 () Real)
(declare-fun w1_2_27 () Real)
(declare-fun w1_2_28 () Real)
(declare-fun w1_2_29 () Real)
(declare-fun w1_2_30 () Real)
(declare-fun w1_2_31 () Real)
(declare-fun w1_2_32 () Real)
(declare-fun w1_2_33 () Real)
(declare-fun w1_2_34 () Real)
(declare-fun w1_2_35 () Real)
(declare-fun w1_2_36 () Real)
(declare-fun w1_2_37 () Real)
(declare-fun w1_2_38 () Real)
(declare-fun w1_2_39 () Real)
(declare-fun b1_2 () Real)
(declare-fun w1_3_1 () Real)
(declare-fun w1_3_2 () Real)
(declare-fun w1_3_3 () Real)
(declare-fun w1_3_4 () Real)
(declare-fun w1_3_5 () Real)
(declare-fun w1_3_6 () Real)
(declare-fun w1_3_7 () Real)
(declare-fun w1_3_8 () Real)
(declare-fun w1_3_9 () Real)
(declare-fun w1_3_10 () Real)
(declare-fun w1_3_11 () Real)
(declare-fun w1_3_12 () Real)
(declare-fun w1_3_13 () Real)
(declare-fun w1_3_14 () Real)
(declare-fun w1_3_15 () Real)
(declare-fun w1_3_16 () Real)
(declare-fun w1_3_17 () Real)
(declare-fun w1_3_18 () Real)
(declare-fun w1_3_19 () Real)
(declare-fun w1_3_20 () Real)
(declare-fun w1_3_21 () Real)
(declare-fun w1_3_22 () Real)
(declare-fun w1_3_23 () Real)
(declare-fun w1_3_24 () Real)
(declare-fun w1_3_25 () Real)
(declare-fun w1_3_26 () Real)
(declare-fun w1_3_27 () Real)
(declare-fun w1_3_28 () Real)
(declare-fun w1_3_29 () Real)
(declare-fun w1_3_30 () Real)
(declare-fun w1_3_31 () Real)
(declare-fun w1_3_32 () Real)
(declare-fun w1_3_33 () Real)
(declare-fun w1_3_34 () Real)
(declare-fun w1_3_35 () Real)
(declare-fun w1_3_36 () Real)
(declare-fun w1_3_37 () Real)
(declare-fun w1_3_38 () Real)
(declare-fun w1_3_39 () Real)
(declare-fun b1_3 () Real)
(declare-fun w1_4_1 () Real)
(declare-fun w1_4_2 () Real)
(declare-fun w1_4_3 () Real)
(declare-fun w1_4_4 () Real)
(declare-fun w1_4_5 () Real)
(declare-fun w1_4_6 () Real)
(declare-fun w1_4_7 () Real)
(declare-fun w1_4_8 () Real)
(declare-fun w1_4_9 () Real)
(declare-fun w1_4_10 () Real)
(declare-fun w1_4_11 () Real)
(declare-fun w1_4_12 () Real)
(declare-fun w1_4_13 () Real)
(declare-fun w1_4_14 () Real)
(declare-fun w1_4_15 () Real)
(declare-fun w1_4_16 () Real)
(declare-fun w1_4_17 () Real)
(declare-fun w1_4_18 () Real)
(declare-fun w1_4_19 () Real)
(declare-fun w1_4_20 () Real)
(declare-fun w1_4_21 () Real)
(declare-fun w1_4_22 () Real)
(declare-fun w1_4_23 () Real)
(declare-fun w1_4_24 () Real)
(declare-fun w1_4_25 () Real)
(declare-fun w1_4_26 () Real)
(declare-fun w1_4_27 () Real)
(declare-fun w1_4_28 () Real)
(declare-fun w1_4_29 () Real)
(declare-fun w1_4_30 () Real)
(declare-fun w1_4_31 () Real)
(declare-fun w1_4_32 () Real)
(declare-fun w1_4_33 () Real)
(declare-fun w1_4_34 () Real)
(declare-fun w1_4_35 () Real)
(declare-fun w1_4_36 () Real)
(declare-fun w1_4_37 () Real)
(declare-fun w1_4_38 () Real)
(declare-fun w1_4_39 () Real)
(declare-fun b1_4 () Real)
(declare-fun w2_1_1 () Real)
(declare-fun w2_1_2 () Real)
(declare-fun w2_1_3 () Real)
(declare-fun w2_1_4 () Real)
(declare-fun b_out () Real)
; Constraint for sample 1 (Label: 0)
(assert (< (+ (* w2_1_1 (+ (* w1_1_1 2.333333) ...(* w1_4_39 0.0) b1_4)) b_out) 0))
; Constraint for sample 2 (Label: 0)
(assert (< (+ (* w2_1_1 (+ (* w1_1_1 0.666667) ...(* w1_4_39 0.0) b1_4)) b_out) 0))
; Constraint for sample 3 (Label: 0)
(assert (< (+ (* w2_1_1 (+ (* w1_1_1 1.666667) ...(* w1_4_39 1.0) b1_4)) b_out) 0))
; Constraint for sample 4 (Label: 1)
(assert (> (+ (* w2_1_1 (+ (* w1_1_1 1.0) ... (* w1_4_39 -0.66667) b1_4)) b_out) 0))
; Constraint for sample 5 (Label: 0)
(assert (< (+ (* w2_1_1 (+ (* w1_1_1 2.0) ... (* w1_4_39 1.0) b1_4)) b_out) 0))
; Constraint for sample 6 (Label: 1)
(assert (> (+ (* w2_1_1 (+ (* w1_1_1 -0.66667) ... (* w1_4_39 0.333333) b1_4)) b_out) 0))
; Constraint for sample 7 (Label: 0)
(assert (< (+ (* w2_1_1 (+ (* w1_1_1 2.333333) ... (* w1_4_39 0.333333) b1_4)) b_out) 0))
; Constraint for sample 8 (Label: 1)
(assert (> (+ (* w2_1_1 (+ (* w1_1_1 0.333333) ... (* w1_4_39 -1.33333) b1_4)) b_out) 0))
; Constraint for sample 9 (Label: 1)
(assert (> (+ (* w2_1_1 (+ (* w1_1_1 1.0) ... (* w1_4_39 -0.66667) b1_4)) b_out) 0))
; Constraint for sample 10 (Label: 0)
(assert (< (+ (* w2_1_1 (+ (* w1_1_1 2.0) ... (* w1_4_39 0.666667) b1_4)) b_out) 0))
(check-sat)
(get-model)