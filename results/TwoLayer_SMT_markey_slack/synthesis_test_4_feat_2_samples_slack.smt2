; SMT-LIBv2 configurations
(set-logic QF_NRA)
(set-option :produce-models true)
(set-option :produce-unsat-cores true)

; SMT-LIBv2 file generated for cvc5 with multi-layer configuration
; ReLU activation is disabled in hidden layers
; Number of features (input neurons): 4
; Number of layers: 1
; Number of nodes in layer 1: 4
; Number of samples: 2
; Slack variables are enabled.

(declare-fun w1_1_1 () Real)
(declare-fun w1_1_2 () Real)
(declare-fun w1_1_3 () Real)
(declare-fun w1_1_4 () Real)
(declare-fun b1_1 () Real)
(declare-fun node_out_1_1 () Real)
(declare-fun w1_2_1 () Real)
(declare-fun w1_2_2 () Real)
(declare-fun w1_2_3 () Real)
(declare-fun w1_2_4 () Real)
(declare-fun b1_2 () Real)
(declare-fun node_out_1_2 () Real)
(declare-fun w1_3_1 () Real)
(declare-fun w1_3_2 () Real)
(declare-fun w1_3_3 () Real)
(declare-fun w1_3_4 () Real)
(declare-fun b1_3 () Real)
(declare-fun node_out_1_3 () Real)
(declare-fun w1_4_1 () Real)
(declare-fun w1_4_2 () Real)
(declare-fun w1_4_3 () Real)
(declare-fun w1_4_4 () Real)
(declare-fun b1_4 () Real)
(declare-fun node_out_1_4 () Real)
(declare-fun w2_1_1 () Real)
(declare-fun w2_1_2 () Real)
(declare-fun w2_1_3 () Real)
(declare-fun w2_1_4 () Real)
(declare-fun b_out () Real)
(declare-fun slack_1 () Real)
(assert (>= slack_1 0.0))
(declare-fun slack_2 () Real)
(assert (>= slack_2 0.0))
; Constraint for sample 1 (Label: 0)
(assert (= node_out_1_1 (+ (* w1_1_1 2.0) (* w1_1_2 2.33333333333333) (* w1_1_3 2.0) (* w1_1_4 2.33333333333333) b1_1)))
(assert (= node_out_1_2 (+ (* w1_2_1 2.0) (* w1_2_2 2.33333333333333) (* w1_2_3 2.0) (* w1_2_4 2.33333333333333) b1_2)))
(assert (= node_out_1_3 (+ (* w1_3_1 2.0) (* w1_3_2 2.33333333333333) (* w1_3_3 2.0) (* w1_3_4 2.33333333333333) b1_3)))
(assert (= node_out_1_4 (+ (* w1_4_1 2.0) (* w1_4_2 2.33333333333333) (* w1_4_3 2.0) (* w1_4_4 2.33333333333333) b1_4)))
;(declare-fun slack_1 () Real)
;(assert (>= slack_1 0.0))
(assert (< (- (+ (* w2_1_1 node_out_1_1) (* w2_1_2 node_out_1_2) (* w2_1_3 node_out_1_3) (* w2_1_4 node_out_1_4) b_out) slack_1) 0.0))
; Constraint for sample 2 (Label: 0)
(assert (= node_out_1_1 (+ (* w1_1_1 1.66666666666666) (* w1_1_2 0.666666666666666) (* w1_1_3 1.66666666666666) (* w1_1_4 0.0) b1_1)))
(assert (= node_out_1_2 (+ (* w1_2_1 1.66666666666666) (* w1_2_2 0.666666666666666) (* w1_2_3 1.66666666666666) (* w1_2_4 0.0) b1_2)))
(assert (= node_out_1_3 (+ (* w1_3_1 1.66666666666666) (* w1_3_2 0.666666666666666) (* w1_3_3 1.66666666666666) (* w1_3_4 0.0) b1_3)))
(assert (= node_out_1_4 (+ (* w1_4_1 1.66666666666666) (* w1_4_2 0.666666666666666) (* w1_4_3 1.66666666666666) (* w1_4_4 0.0) b1_4)))
;(declare-fun slack_2 () Real)
;(assert (>= slack_2 0.0))
(assert (< (- (+ (* w2_1_1 node_out_1_1) (* w2_1_2 node_out_1_2) (* w2_1_3 node_out_1_3) (* w2_1_4 node_out_1_4) b_out) slack_2) 0.0))
(declare-fun total_slack () Real)
(assert (= total_slack (+ slack_1 slack_2)))
(minimize total_slack)
(check-sat)
(get-model)